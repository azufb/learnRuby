# オブジェクト・変数・定数

# オブジェクト
# Rubyでは、データ・値は、「オブジェクト」と呼ばれる。
=begin

以下が、主なオブジェクト。

数値オブジェクト
→数を表す。

文字列オブジェクト
→文字列を表す。

配列オブジェクト・ハッシュオブジェクト
→複数のデータをまとめる。

正規表現オブジェクト
→マッチングのためのパターンを表す。

時刻オブジェクト
→時刻を表す。

ファイルオブジェクト
→ファイルへの読み書きを行うためのオブジェクト。

シンボルオブジェクト
→メソッドなどの名前の識別に使うラベルを表す。

=end

# クラス
# クラスはオブジェクトの種類を表す。
# オブジェクトは、クラスのインスタンスである。
# 例）数値オブジェクトは、Numericクラスのインスタンスである。
# 自分でクラスを新たに定義することもできる。

# 変数
# ローカル変数
# 使えるスコープが限定的。
# 先頭が、アルファベット小文字か「_」で始まる。
# 例）
x = 0
_y = 1

# グローバル変数
# プログラム内のどこでも使える。
# 先頭が「$」で始まる。
# 例）
$x = 0

# 変数のサンプル
$sample = 0
sample = 0

require './ch4_sub.rb'

puts($sample) # グローバル変数は再代入されて、1となる。
puts(sample) # ローカル変数はこのファイルの範囲内でのみ有効なので、再代入されない。

# 定数
# 一度代入されると、再代入できない。先頭が、大文字で始まる。

# 多重代入
# 変数1つ1つに代入していくのではなく、複数の変数に一度に代入してしまうことができる。
# 変数同士での値の入れ替えにも使える
first = 1
second = 2
third = 3
puts(first)
puts(second)
puts(third)

f, s, t = 1, 2, 3
puts(f)
puts(s)
puts(t)

# 変数に「*」がついていると、残った値が全て配列として渡される。
a, b, *rest = 'あ', 'い', 'う', 'え', 'お'
p(a)
p(b)
p(rest) # ["う", "え", "お"]